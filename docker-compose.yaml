services:
  database:
    image: postgres:16.2
    container_name: database
    networks:
      - gateway
    restart: always
    environment:
      POSTGRES_DB: database
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d database"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data

  nginx:
    container_name: nginx
    image: nginx:latest
    networks:
      - gateway
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - user-service

  user-service:
    container_name: user-service
    networks:
      - gateway
    build:
      context: .
      dockerfile: apps/user-service/Dockerfile.dev
      target: development
      args:
        - PORT=8080
    depends_on:
      database:
        condition: service_healthy
    ports:
      - "8080:8080"
    volumes:
      - type: bind
        source: ./apps/user-service/src
        target: /app/user-service/src
      - type: bind
        source: ./apps/user-service/pom.xml
        target: /app/user-service/pom.xml
        
volumes:
  postgres_data:

networks:
  gateway:
    driver: bridge